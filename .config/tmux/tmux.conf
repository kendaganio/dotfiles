# 1
set -g base-index 1
set-window-option -g pane-base-index 1

# sets prefix to Ctrl-A
set -g prefix C-a
unbind C-b

set -g history-limit 1000000

# term color!
set -g default-terminal "tmux-256color"
set -as terminal-features ',xterm*:RGB'
set -gas terminal-overrides "*:Tc" # true color support
set -gas terminal-overrides "*:RGB" # true color support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# reloads .tmux.conf
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded tmux.conf :D"

set -s escape-time 0 # Allows for faster key repetition
set -g automatic-rename off
set -g allow-rename off 
set -g focus-events on
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Set status bar
set -g status-left " \uf489  #S #[fg=colour8,bg=colour8]\ue0b8#[default]"
set -g status-left-length 50
set -g status-left-style bg=colour8,bold
set -g status-style bg=colour8

set -g window-status-format "#[fg=colour8,bg=colour8]\ue0be#[bg=colour8,fg=white] #I: #W #[fg=colour8,bg=colour8]\ue0b8#[default]"
set -g window-status-current-format "#[fg=colour4,bg=colour8]\ue0be#[bg=colour4,fg=colour15] #I: #{?window_zoomed_flag,\uf531 ,}#W #[fg=colour4,bg=colour8]\ue0b8#[default]"

set -g pane-active-border-style fg=colour4,bg=default
set -g pane-border-style fg=colour8,bg=default

set -g status-right "#[fg=colour4,bg=colour8]\ue0ba#[bg=colour4,fg=colour15] \ueab0 %H:%M - %b %d, %Y "
set -g status-right-style bg=colour4

# Highlight active window
set-window-option -g window-status-current-style bg=colour36

# Vim Style moving
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -n 'C-u' if-shell "$is_vim" "send-keys C-u"  "copy-mode"

# mouse mode
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Use vim bindings in copy mode
setw -g mode-keys vi

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xsel --clipboard --input"

unbind -T copy-mode-vi Enter
