# 1
set -g base-index 1
set-window-option -g pane-base-index 1

# sets prefix to Ctrl-A
set -g prefix C-a
unbind C-b

# term color!
set -g default-terminal "screen-256color"

# reloads .tmux.conf
unbind r
bind r source-file ~/.tmux.conf

set -s escape-time 0 # Allows for faster key repetition
set -g automatic-rename off
set -g allow-rename off 
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Set status bar
set -g status-left " ï™¨ #S #[fg=colour23,bg=colour23]\ue0b8#[default]"
set -g status-left-length 50
set -g status-left-style bg=colour23,bold
set -g status-style bg=colour23

set -g window-status-format "#[fg=colour23,bg=colour23]\ue0be#[bg=colour23,fg=white] #I: #W #[fg=colour23,bg=colour23]\ue0b8#[default]"
set -g window-status-current-format "#[fg=colour36,bg=colour23]\ue0be#[bg=colour36,fg=colour15] #I: #{?window_zoomed_flag,[zoomed] ,}#W #[fg=colour36,bg=colour23]\ue0b8#[default]"

set -g pane-active-border-style fg=colour36,bg=colour36
set -g pane-border-style fg=colour23,bg=colour23

set -g status-right "#[fg=colour36,bg=colour23]\ue0ba#[bg=colour36,fg=colour15] %H:%M - %b %d, %Y "
set -g status-right-style bg=colour36

# Highlight active window
set-window-option -g window-status-current-style bg=colour36

# Vim Style moving
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind -n C-u if-shell "$is_vim" "send-keys C-u" "copy-mode"

#set -g default-shell /usr/local/bin/fish
#set -g default-command /usr/local/bin/fish

# mouse mode
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Use vim bindings in copy mode
setw -g mode-keys vi

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -selection clipboard"

unbind -T copy-mode-vi Enter
