# ES2015
snippet "c(onst)?" "const" br
const ${1} = ${2:'$1'};
endsnippet

snippet "l(et)?" "let" br
let ${1} = ${2:'$1'};
endsnippet

snippet "i(mport|mp|m)?" "import" br
import ${1} from '${2:./}${3:$1}';
endsnippet

snippet "e(xport|xp|x)?" "export" br
export ${1:default };
endsnippet

snippet ie "Import file then export" b
import ${1} from '${2:./}${3:$1}';

export ${4:default} $1;
endsnippet

snippet r "return"
return ${0:result;}
endsnippet

snippet : "Object Value JS"
${1:key}: ${0:value},
endsnippet

snippet :f "method: func(...) { ... }"
${1:key}: ${2:(args)} => {
	return $4;
}${3:,}
endsnippet

snippet "\.(map|filter|forEach|reduce)" "Array method with an arrow function" r
.`!p snip.rv = match.group(1)`(${1:(c, i)} => {
	return $2;
});
endsnippet

snippet "\.(map|filter|forEach|reduce)=" "Array method with an arrow function inline" rA
.`!p snip.rv = match.group(1)`(${1:(c, i)} => $2);
endsnippet

snippet => "Arrow function"
(${1:args}) => {
	return $3;
}${2:;}
endsnippet

snippet =>> "Inline arrow function" A
(${1:args}) => ($2);
endsnippet

snippet c=> "Const Function" bA
const ${1:name} = (${2:args}) => {
	return $4;
}${3:;}
endsnippet

snippet expf "Export function" b
export ${1:default }function ${2:name}($3) {
	$4
};
endsnippet

snippet fun* "Generator"
function* ${1:name}($2) {
	yield $3;
}
endsnippet

snippet forof "For of loop" b
for (let ${1:value} of ${2:iterable}) {
	${3:$1}
}
endsnippet

snippet class "Class"
class ${1:Name} {
	constructor(${2:arg}) {
		$3
	}
	$4
}
endsnippet

snippet cl "console.log(...)"
console.log('${2:$1: }', ${1});
endsnippet

extends html
